-----

Proprietary Tool Suite

(Nothing to report)

-----

$ scan-build clang constant.c

constant.c:31:21: warning: duplicate 'const' declaration specifier [-Wduplicate-decl-specifier]
    const example_s const * alias = &data;
                    ^


No bugs found.

-----

$ cppcheck constant.c

(Nothing to report)

-----

$ splint constant.c

Splint 3.1.2 --- 03 May 2009

constant.c:26:9: Function main declared to return SINT_32, should return int
  The function main does not match the expected type. (Use -maintype to inhibit
  warning)

Finished checking --- 1 code warning

-----

$ flawfinder constant.c

FINAL RESULTS:


ANALYSIS SUMMARY:

No hits found.

-----

$ flint++ constant.c

===============================================================================
File constant.c:
Errors:   0
Warnings: 0
Advice:   2
===============================================================================

Line 19: Advice

Prefer `nullptr' to `NULL' in new C++ code.

Unlike `NULL', `nullptr' can't accidentally be used in arithmetic or as an integer. See http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf for details.

Line 41: Advice

Prefer `nullptr' to `NULL' in new C++ code.

Unlike `NULL', `nullptr' can't accidentally be used in arithmetic or as an integer. See http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf for details.

===============================================================================
Lint Summary: 1 files

Errors:   0
Warnings: 0
Advice:   2
===============================================================================

-----

$ frama-c constant.c

(Nothing to report)

-----

$ vera++ constant.c

(Nothing to report)

-----

$ oclint constant.c

Compiler Warnings:

/home/snewton/src/github_all_ps/static-analysis-argumentation/c_examples/constant.c:31:21: duplicate 'const' declaration specifier


OCLint Report

Summary: TotalFiles=1 FilesWithViolations=1 P1=0 P2=0 P3=2
